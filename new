<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
    integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <script src="https://raw.githack.com/SortableJS/Sortable/master/Sortable.js"></script>
  <title>todo list</title>
  <style>
    #listItem li {
      display: flex;
      justify-content: space-between;
      border: 1px solid red;
      padding: 10px;
      margin: 5px;
      cursor: grab;
    }

    #error {
      margin-left: 200px;
    }
  </style>
</head>

<body>
  <div class="container mt-5">
    <div class="row d-flex justify-content-center">
      <div class="col-md-8">
        <div class="card">
          <div class="card-body">
            <h2 class="card-title text-center text-primary"> Todo List </h2>
            <div class="form-content d-flex justify-content-center mt-4">
              <form class="form-inline my-2 my-lg-0">
                <input class="form-control mr-sm-2" type="text" placeholder="Enter your Name" id="inputName">
                <input class="form-control mr-sm-2" type="button" value="Add" onclick="myFunction()">
              </form>
            </div>
            <span id="error" class="text-danger mt-5"></span>

            <ul class="list-group mt-5 " id="listItem">

            </ul>
          </div>


        </div>
      </div>
    </div>
  </div>

  <script>

    function myFunction(a = "") {
      let inputValue = ""
      if (a != "") {
        inputValue = a
      } else {
        inputValue = document.getElementById("inputName").value
        if(inputValue !="")
        {
          let arr = JSON.parse(window.localStorage.getItem("name"));
          if (!arr) {
            arr = [];
            arr.push(inputValue);
            window.localStorage.setItem("name", JSON.stringify(arr))
          }
          else{
            arr.push(inputValue);
            window.localStorage.setItem("name", JSON.stringify(arr))
          }
        }
      }

      document.getElementById("error").innerHTML = "";

      if (inputValue === "") {
        document.getElementById("error").innerHTML = "please enter Name";
      } else {
          let listItem = document.getElementById("listItem")

          let liElement = document.createElement("li")

          liElement.textContent = inputValue
          // let arr = JSON.parse(window.localStorage.getItem("name"));
          // if (!arr) {
          //   arr = [];
          //   arr.push(inputValue);
          //   window.localStorage.setItem("name", JSON.stringify(arr))
          // }
          // else {
            // arr.push(inputValue);
            // window.localStorage.setItem("name", JSON.stringify(arr))
            //console.log(arr)
            let closeBtn = document.createElement("closeBtn")
            closeBtn.textContent = "x"
            closeBtn.addEventListener('click', () =>{removeItem(inputValue),liElement.remove()});
            liElement.appendChild(closeBtn)
            listItem.append(liElement)
         // }

      }
      document.getElementById("inputName").value = ""
    }

    Sortable.create(listItem, {
      handle: 'li',
      animation: 150
    });


    function onLoad() {
      let arr = JSON.parse(window.localStorage.getItem("name"));
     // console.log(arr.length)
      if (arr != null) {
        for (let a of arr) {
          myFunction(a);
        }
      }
    }
    onLoad()

    
    function removeItem(inputValue){
      let arr = JSON.parse(window.localStorage.getItem("name"));      
          if (arr.length) {
            let index = arr.indexOf(inputValue)
            arr.splice(index,1);
            window.localStorage.setItem("name", JSON.stringify(arr))
          }
    }


    <DragDropContext>
          <Droppable droppableId="listId">{(provided) =>
          (<ListGroup as="ul"
            className="mt-3"
            ref={provided.innerRef}
            {...provided.droppableProps}>
            <Draggable draggableId={props.userName}>{(provided) => (
              <ListGroup.Item as="li"
                className="d-flex justify-content-between"
                {...provided.draggableProps}
                {...provided.dragHandleProps}
                ref={provided.innerRef}>
                {props.userName}
                <span onClick={() => props.removeItem(props.userName)}>x</span>
              </ListGroup.Item>)}
            </Draggable>
          </ListGroup>)}
          </Droppable>
      </DragDropContext>





  </script>

</body>

</html>